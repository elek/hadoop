<?xml version="1.0" encoding="iso-8859-1" standalone="no"?>
<!-- Generated by the JDiff Javadoc doclet -->
<!-- (http://www.jdiff.org) -->
<!-- on Tue Aug 30 05:53:55 UTC 2016 -->

<api
  xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'
  xsi:noNamespaceSchemaLocation='api.xsd'
  name="Apache Hadoop YARN Server Common 3.0.0-alpha1"
  jdversion="1.0.9">

<!--  Command line arguments =  -doclet org.apache.hadoop.classification.tools.ExcludePrivateAnnotationsJDiffDoclet -docletpath /build/source/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/target/hadoop-annotations.jar:/build/source/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/target/jdiff.jar -verbose -classpath /build/source/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/target/classes:/build/source/hadoop-common-project/hadoop-common/target/hadoop-common-3.0.0-alpha1.jar:/maven/commons-cli/commons-cli/1.2/commons-cli-1.2.jar:/maven/org/apache/commons/commons-math3/3.1.1/commons-math3-3.1.1.jar:/maven/xmlenc/xmlenc/0.52/xmlenc-0.52.jar:/maven/org/apache/httpcomponents/httpclient/4.5.2/httpclient-4.5.2.jar:/maven/org/apache/httpcomponents/httpcore/4.4.4/httpcore-4.4.4.jar:/maven/commons-codec/commons-codec/1.4/commons-codec-1.4.jar:/maven/commons-io/commons-io/2.4/commons-io-2.4.jar:/maven/commons-net/commons-net/3.1/commons-net-3.1.jar:/maven/commons-collections/commons-collections/3.2.2/commons-collections-3.2.2.jar:/maven/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/maven/org/mortbay/jetty/jetty/6.1.26/jetty-6.1.26.jar:/maven/org/mortbay/jetty/jetty-util/6.1.26/jetty-util-6.1.26.jar:/maven/org/mortbay/jetty/jetty-sslengine/6.1.26/jetty-sslengine-6.1.26.jar:/maven/javax/servlet/jsp/jsp-api/2.1/jsp-api-2.1.jar:/maven/com/sun/jersey/jersey-core/1.19/jersey-core-1.19.jar:/maven/javax/ws/rs/jsr311-api/1.1.1/jsr311-api-1.1.1.jar:/maven/com/sun/jersey/jersey-servlet/1.19/jersey-servlet-1.19.jar:/maven/com/sun/jersey/jersey-json/1.19/jersey-json-1.19.jar:/maven/org/codehaus/jettison/jettison/1.1/jettison-1.1.jar:/maven/com/sun/xml/bind/jaxb-impl/2.2.3-1/jaxb-impl-2.2.3-1.jar:/maven/com/sun/jersey/jersey-server/1.19/jersey-server-1.19.jar:/maven/log4j/log4j/1.2.17/log4j-1.2.17.jar:/maven/net/java/dev/jets3t/jets3t/0.9.0/jets3t-0.9.0.jar:/maven/com/jamesmurty/utils/java-xmlbuilder/0.4/java-xmlbuilder-0.4.jar:/maven/commons-lang/commons-lang/2.6/commons-lang-2.6.jar:/maven/commons-configuration/commons-configuration/1.6/commons-configuration-1.6.jar:/maven/commons-digester/commons-digester/1.8/commons-digester-1.8.jar:/maven/commons-beanutils/commons-beanutils/1.7.0/commons-beanutils-1.7.0.jar:/maven/commons-beanutils/commons-beanutils-core/1.8.0/commons-beanutils-core-1.8.0.jar:/maven/org/slf4j/slf4j-api/1.7.10/slf4j-api-1.7.10.jar:/maven/org/slf4j/slf4j-log4j12/1.7.10/slf4j-log4j12-1.7.10.jar:/maven/org/codehaus/jackson/jackson-core-asl/1.9.13/jackson-core-asl-1.9.13.jar:/maven/org/codehaus/jackson/jackson-mapper-asl/1.9.13/jackson-mapper-asl-1.9.13.jar:/maven/org/apache/avro/avro/1.7.4/avro-1.7.4.jar:/maven/com/thoughtworks/paranamer/paranamer/2.3/paranamer-2.3.jar:/maven/org/xerial/snappy/snappy-java/1.0.4.1/snappy-java-1.0.4.1.jar:/maven/com/google/re2j/re2j/1.0/re2j-1.0.jar:/maven/com/google/code/gson/gson/2.2.4/gson-2.2.4.jar:/build/source/hadoop-common-project/hadoop-auth/target/hadoop-auth-3.0.0-alpha1.jar:/maven/com/nimbusds/nimbus-jose-jwt/3.9/nimbus-jose-jwt-3.9.jar:/maven/net/jcip/jcip-annotations/1.0/jcip-annotations-1.0.jar:/maven/net/minidev/json-smart/1.1.1/json-smart-1.1.1.jar:/maven/org/apache/curator/curator-framework/2.7.1/curator-framework-2.7.1.jar:/maven/com/jcraft/jsch/0.1.51/jsch-0.1.51.jar:/maven/org/apache/curator/curator-client/2.7.1/curator-client-2.7.1.jar:/maven/org/apache/curator/curator-recipes/2.7.1/curator-recipes-2.7.1.jar:/maven/com/google/code/findbugs/jsr305/3.0.0/jsr305-3.0.0.jar:/maven/org/apache/htrace/htrace-core4/4.0.1-incubating/htrace-core4-4.0.1-incubating.jar:/maven/org/apache/commons/commons-compress/1.4.1/commons-compress-1.4.1.jar:/maven/org/tukaani/xz/1.0/xz-1.0.jar:/maven/org/apache/kerby/kerb-simplekdc/1.0.0-RC2/kerb-simplekdc-1.0.0-RC2.jar:/maven/org/apache/kerby/kerby-config/1.0.0-RC2/kerby-config-1.0.0-RC2.jar:/maven/org/apache/kerby/kerb-core/1.0.0-RC2/kerb-core-1.0.0-RC2.jar:/maven/org/apache/kerby/kerby-asn1/1.0.0-RC2/kerby-asn1-1.0.0-RC2.jar:/maven/org/apache/kerby/kerby-pkix/1.0.0-RC2/kerby-pkix-1.0.0-RC2.jar:/maven/org/apache/kerby/kerby-util/1.0.0-RC2/kerby-util-1.0.0-RC2.jar:/maven/org/apache/kerby/kerb-client/1.0.0-RC2/kerb-client-1.0.0-RC2.jar:/maven/org/apache/kerby/kerb-common/1.0.0-RC2/kerb-common-1.0.0-RC2.jar:/maven/org/apache/kerby/kerb-util/1.0.0-RC2/kerb-util-1.0.0-RC2.jar:/maven/org/apache/kerby/kerb-crypto/1.0.0-RC2/kerb-crypto-1.0.0-RC2.jar:/maven/org/apache/kerby/kerb-server/1.0.0-RC2/kerb-server-1.0.0-RC2.jar:/maven/org/apache/kerby/kerb-identity/1.0.0-RC2/kerb-identity-1.0.0-RC2.jar:/maven/org/apache/kerby/kerb-admin/1.0.0-RC2/kerb-admin-1.0.0-RC2.jar:/build/source/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/target/hadoop-yarn-api-3.0.0-alpha1.jar:/maven/javax/xml/bind/jaxb-api/2.2.2/jaxb-api-2.2.2.jar:/maven/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar:/maven/javax/activation/activation/1.1/activation-1.1.jar:/build/source/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/target/hadoop-yarn-common-3.0.0-alpha1.jar:/maven/com/sun/jersey/jersey-client/1.19/jersey-client-1.19.jar:/maven/org/codehaus/jackson/jackson-jaxrs/1.9.13/jackson-jaxrs-1.9.13.jar:/maven/org/codehaus/jackson/jackson-xc/1.9.13/jackson-xc-1.9.13.jar:/maven/com/google/inject/extensions/guice-servlet/4.0/guice-servlet-4.0.jar:/maven/com/google/inject/guice/4.0/guice-4.0.jar:/maven/javax/inject/javax.inject/1/javax.inject-1.jar:/maven/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/maven/com/sun/jersey/contribs/jersey-guice/1.19/jersey-guice-1.19.jar:/maven/com/google/guava/guava/11.0.2/guava-11.0.2.jar:/maven/commons-logging/commons-logging/1.1.3/commons-logging-1.1.3.jar:/build/source/hadoop-common-project/hadoop-annotations/target/hadoop-annotations-3.0.0-alpha1.jar:/usr/lib/jvm/java-8-oracle/lib/tools.jar:/maven/com/google/protobuf/protobuf-java/2.5.0/protobuf-java-2.5.0.jar:/maven/org/apache/zookeeper/zookeeper/3.4.6/zookeeper-3.4.6.jar:/maven/io/netty/netty/3.10.5.Final/netty-3.10.5.Final.jar:/maven/org/fusesource/leveldbjni/leveldbjni-all/1.8/leveldbjni-all-1.8.jar -sourcepath /build/source/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java -doclet org.apache.hadoop.classification.tools.ExcludePrivateAnnotationsJDiffDoclet -docletpath /build/source/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/target/hadoop-annotations.jar:/build/source/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/target/jdiff.jar -apidir /build/source/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/target/site/jdiff/xml -apiname Apache Hadoop YARN Server Common 3.0.0-alpha1 -->
<package name="org.apache.hadoop.yarn.server">
  <!-- start class org.apache.hadoop.yarn.server.RMNMSecurityInfoClass -->
  <class name="RMNMSecurityInfoClass" extends="org.apache.hadoop.security.SecurityInfo"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="RMNMSecurityInfoClass"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getKerberosInfo" return="org.apache.hadoop.security.KerberosInfo"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="protocol" type="java.lang.Class"/>
      <param name="conf" type="org.apache.hadoop.conf.Configuration"/>
    </method>
    <method name="getTokenInfo" return="org.apache.hadoop.security.token.TokenInfo"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="protocol" type="java.lang.Class"/>
      <param name="conf" type="org.apache.hadoop.conf.Configuration"/>
    </method>
  </class>
  <!-- end class org.apache.hadoop.yarn.server.RMNMSecurityInfoClass -->
</package>
<package name="org.apache.hadoop.yarn.server.api">
  <!-- start interface org.apache.hadoop.yarn.server.api.DistributedSchedulingAMProtocol -->
  <interface name="DistributedSchedulingAMProtocol"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="org.apache.hadoop.yarn.api.ApplicationMasterProtocol"/>
    <method name="registerApplicationMasterForDistributedScheduling" return="org.apache.hadoop.yarn.server.api.protocolrecords.RegisterDistributedSchedulingAMResponse"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="request" type="org.apache.hadoop.yarn.api.protocolrecords.RegisterApplicationMasterRequest"/>
      <exception name="YarnException" type="org.apache.hadoop.yarn.exceptions.YarnException"/>
      <exception name="IOException" type="java.io.IOException"/>
      <doc>
      <![CDATA[<p>
 Extends the <code>registerApplicationMaster</code> to wrap the response
 with additional metadata.
 </p>

 @param request
          ApplicationMaster registration request
 @return A <code>RegisterDistributedSchedulingAMResponse</code> that
         contains a standard AM registration response along with additional
         information required for distributed scheduling
 @throws YarnException YarnException
 @throws IOException IOException]]>
      </doc>
    </method>
    <method name="allocateForDistributedScheduling" return="org.apache.hadoop.yarn.server.api.protocolrecords.DistributedSchedulingAllocateResponse"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="request" type="org.apache.hadoop.yarn.server.api.protocolrecords.DistributedSchedulingAllocateRequest"/>
      <exception name="YarnException" type="org.apache.hadoop.yarn.exceptions.YarnException"/>
      <exception name="IOException" type="java.io.IOException"/>
      <doc>
      <![CDATA[<p>
 Extends the <code>allocate</code> to wrap the response with additional
 metadata.
 </p>

 @param request
          ApplicationMaster allocate request
 @return A <code>DistributedSchedulingAllocateResponse</code> that contains
         a standard AM allocate response along with additional information
         required for distributed scheduling
 @throws YarnException YarnException
 @throws IOException IOException]]>
      </doc>
    </method>
    <doc>
    <![CDATA[<p>
 This protocol extends the <code>ApplicationMasterProtocol</code>. It is used
 by the <code>DistributedScheduler</code> running on the NodeManager to wrap
 the request / response objects of the <code>registerApplicationMaster</code>
 and <code>allocate</code> methods of the protocol with additional information
 required to perform distributed scheduling.
 </p>]]>
    </doc>
  </interface>
  <!-- end interface org.apache.hadoop.yarn.server.api.DistributedSchedulingAMProtocol -->
  <!-- start interface org.apache.hadoop.yarn.server.api.ResourceManagerConstants -->
  <interface name="ResourceManagerConstants"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <field name="RM_INVALID_IDENTIFIER" type="long"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[This states the invalid identifier of Resource Manager. This is used as a
 default value for initializing RM identifier. Currently, RM is using time
 stamp as RM identifier.]]>
      </doc>
    </field>
  </interface>
  <!-- end interface org.apache.hadoop.yarn.server.api.ResourceManagerConstants -->
  <!-- start interface org.apache.hadoop.yarn.server.api.ResourceTracker -->
  <interface name="ResourceTracker"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="registerNodeManager" return="org.apache.hadoop.yarn.server.api.protocolrecords.RegisterNodeManagerResponse"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="request" type="org.apache.hadoop.yarn.server.api.protocolrecords.RegisterNodeManagerRequest"/>
      <exception name="YarnException" type="org.apache.hadoop.yarn.exceptions.YarnException"/>
      <exception name="IOException" type="java.io.IOException"/>
    </method>
    <method name="nodeHeartbeat" return="org.apache.hadoop.yarn.server.api.protocolrecords.NodeHeartbeatResponse"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="request" type="org.apache.hadoop.yarn.server.api.protocolrecords.NodeHeartbeatRequest"/>
      <exception name="YarnException" type="org.apache.hadoop.yarn.exceptions.YarnException"/>
      <exception name="IOException" type="java.io.IOException"/>
    </method>
    <method name="unRegisterNodeManager" return="org.apache.hadoop.yarn.server.api.protocolrecords.UnRegisterNodeManagerResponse"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="request" type="org.apache.hadoop.yarn.server.api.protocolrecords.UnRegisterNodeManagerRequest"/>
      <exception name="YarnException" type="org.apache.hadoop.yarn.exceptions.YarnException"/>
      <exception name="IOException" type="java.io.IOException"/>
    </method>
    <doc>
    <![CDATA[This is used by the Node Manager to register/nodeHeartbeat/unregister with
 the ResourceManager.]]>
    </doc>
  </interface>
  <!-- end interface org.apache.hadoop.yarn.server.api.ResourceTracker -->
  <!-- start interface org.apache.hadoop.yarn.server.api.ResourceTrackerPB -->
  <interface name="ResourceTrackerPB"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="org.apache.hadoop.yarn.proto.ResourceTracker.ResourceTrackerService.BlockingInterface"/>
  </interface>
  <!-- end interface org.apache.hadoop.yarn.server.api.ResourceTrackerPB -->
  <!-- start interface org.apache.hadoop.yarn.server.api.SCMUploaderProtocolPB -->
  <interface name="SCMUploaderProtocolPB"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="org.apache.hadoop.yarn.proto.SCMUploaderProtocol.SCMUploaderProtocolService.BlockingInterface"/>
  </interface>
  <!-- end interface org.apache.hadoop.yarn.server.api.SCMUploaderProtocolPB -->
  <!-- start class org.apache.hadoop.yarn.server.api.ServerRMProxy -->
  <class name="ServerRMProxy" extends="org.apache.hadoop.yarn.client.RMProxy"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="createRMProxy" return="T"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="configuration" type="org.apache.hadoop.conf.Configuration"/>
      <param name="protocol" type="java.lang.Class"/>
      <exception name="IOException" type="java.io.IOException"/>
      <doc>
      <![CDATA[Create a proxy to the ResourceManager for the specified protocol.
 @param configuration Configuration with all the required information.
 @param protocol Server protocol for which proxy is being requested.
 @param <T> Type of proxy.
 @return Proxy to the ResourceManager for the specified server protocol.
 @throws IOException]]>
      </doc>
    </method>
  </class>
  <!-- end class org.apache.hadoop.yarn.server.api.ServerRMProxy -->
</package>
<package name="org.apache.hadoop.yarn.server.api.impl.pb.client">
  <!-- start class org.apache.hadoop.yarn.server.api.impl.pb.client.CollectorNodemanagerProtocolPBClientImpl -->
  <class name="CollectorNodemanagerProtocolPBClientImpl" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="org.apache.hadoop.yarn.server.api.CollectorNodemanagerProtocol"/>
    <implements name="java.io.Closeable"/>
    <constructor name="CollectorNodemanagerProtocolPBClientImpl" type="long, java.net.InetSocketAddress, org.apache.hadoop.conf.Configuration"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="IOException" type="java.io.IOException"/>
    </constructor>
    <method name="reportNewCollectorInfo" return="org.apache.hadoop.yarn.server.api.protocolrecords.ReportNewCollectorInfoResponse"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="request" type="org.apache.hadoop.yarn.server.api.protocolrecords.ReportNewCollectorInfoRequest"/>
      <exception name="YarnException" type="org.apache.hadoop.yarn.exceptions.YarnException"/>
      <exception name="IOException" type="java.io.IOException"/>
    </method>
    <method name="getTimelineCollectorContext" return="org.apache.hadoop.yarn.server.api.protocolrecords.GetTimelineCollectorContextResponse"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="request" type="org.apache.hadoop.yarn.server.api.protocolrecords.GetTimelineCollectorContextRequest"/>
      <exception name="YarnException" type="org.apache.hadoop.yarn.exceptions.YarnException"/>
      <exception name="IOException" type="java.io.IOException"/>
    </method>
    <method name="close"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
  </class>
  <!-- end class org.apache.hadoop.yarn.server.api.impl.pb.client.CollectorNodemanagerProtocolPBClientImpl -->
  <!-- start class org.apache.hadoop.yarn.server.api.impl.pb.client.DistributedSchedulingAMProtocolPBClientImpl -->
  <class name="DistributedSchedulingAMProtocolPBClientImpl" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="org.apache.hadoop.yarn.server.api.DistributedSchedulingAMProtocol"/>
    <implements name="java.io.Closeable"/>
    <constructor name="DistributedSchedulingAMProtocolPBClientImpl" type="long, java.net.InetSocketAddress, org.apache.hadoop.conf.Configuration"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="IOException" type="java.io.IOException"/>
    </constructor>
    <method name="close"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="registerApplicationMasterForDistributedScheduling" return="org.apache.hadoop.yarn.server.api.protocolrecords.RegisterDistributedSchedulingAMResponse"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="request" type="org.apache.hadoop.yarn.api.protocolrecords.RegisterApplicationMasterRequest"/>
      <exception name="YarnException" type="org.apache.hadoop.yarn.exceptions.YarnException"/>
      <exception name="IOException" type="java.io.IOException"/>
    </method>
    <method name="allocateForDistributedScheduling" return="org.apache.hadoop.yarn.server.api.protocolrecords.DistributedSchedulingAllocateResponse"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="request" type="org.apache.hadoop.yarn.server.api.protocolrecords.DistributedSchedulingAllocateRequest"/>
      <exception name="YarnException" type="org.apache.hadoop.yarn.exceptions.YarnException"/>
      <exception name="IOException" type="java.io.IOException"/>
    </method>
    <method name="registerApplicationMaster" return="org.apache.hadoop.yarn.api.protocolrecords.RegisterApplicationMasterResponse"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="request" type="org.apache.hadoop.yarn.api.protocolrecords.RegisterApplicationMasterRequest"/>
      <exception name="YarnException" type="org.apache.hadoop.yarn.exceptions.YarnException"/>
      <exception name="IOException" type="java.io.IOException"/>
    </method>
    <method name="finishApplicationMaster" return="org.apache.hadoop.yarn.api.protocolrecords.FinishApplicationMasterResponse"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="request" type="org.apache.hadoop.yarn.api.protocolrecords.FinishApplicationMasterRequest"/>
      <exception name="YarnException" type="org.apache.hadoop.yarn.exceptions.YarnException"/>
      <exception name="IOException" type="java.io.IOException"/>
    </method>
    <method name="allocate" return="org.apache.hadoop.yarn.api.protocolrecords.AllocateResponse"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="request" type="org.apache.hadoop.yarn.api.protocolrecords.AllocateRequest"/>
      <exception name="YarnException" type="org.apache.hadoop.yarn.exceptions.YarnException"/>
      <exception name="IOException" type="java.io.IOException"/>
    </method>
    <doc>
    <![CDATA[Implementation of {@link DistributedSchedulingAMProtocol}, used when
 distributed scheduling is enabled.]]>
    </doc>
  </class>
  <!-- end class org.apache.hadoop.yarn.server.api.impl.pb.client.DistributedSchedulingAMProtocolPBClientImpl -->
  <!-- start class org.apache.hadoop.yarn.server.api.impl.pb.client.ResourceTrackerPBClientImpl -->
  <class name="ResourceTrackerPBClientImpl" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="org.apache.hadoop.yarn.server.api.ResourceTracker"/>
    <implements name="java.io.Closeable"/>
    <constructor name="ResourceTrackerPBClientImpl" type="long, java.net.InetSocketAddress, org.apache.hadoop.conf.Configuration"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="IOException" type="java.io.IOException"/>
    </constructor>
    <method name="close"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="registerNodeManager" return="org.apache.hadoop.yarn.server.api.protocolrecords.RegisterNodeManagerResponse"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="request" type="org.apache.hadoop.yarn.server.api.protocolrecords.RegisterNodeManagerRequest"/>
      <exception name="YarnException" type="org.apache.hadoop.yarn.exceptions.YarnException"/>
      <exception name="IOException" type="java.io.IOException"/>
    </method>
    <method name="nodeHeartbeat" return="org.apache.hadoop.yarn.server.api.protocolrecords.NodeHeartbeatResponse"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="request" type="org.apache.hadoop.yarn.server.api.protocolrecords.NodeHeartbeatRequest"/>
      <exception name="YarnException" type="org.apache.hadoop.yarn.exceptions.YarnException"/>
      <exception name="IOException" type="java.io.IOException"/>
    </method>
    <method name="unRegisterNodeManager" return="org.apache.hadoop.yarn.server.api.protocolrecords.UnRegisterNodeManagerResponse"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="request" type="org.apache.hadoop.yarn.server.api.protocolrecords.UnRegisterNodeManagerRequest"/>
      <exception name="YarnException" type="org.apache.hadoop.yarn.exceptions.YarnException"/>
      <exception name="IOException" type="java.io.IOException"/>
    </method>
  </class>
  <!-- end class org.apache.hadoop.yarn.server.api.impl.pb.client.ResourceTrackerPBClientImpl -->
  <!-- start class org.apache.hadoop.yarn.server.api.impl.pb.client.SCMUploaderProtocolPBClientImpl -->
  <class name="SCMUploaderProtocolPBClientImpl" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="org.apache.hadoop.yarn.server.api.SCMUploaderProtocol"/>
    <implements name="java.io.Closeable"/>
    <constructor name="SCMUploaderProtocolPBClientImpl" type="long, java.net.InetSocketAddress, org.apache.hadoop.conf.Configuration"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="IOException" type="java.io.IOException"/>
    </constructor>
    <method name="close"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="notify" return="org.apache.hadoop.yarn.server.api.protocolrecords.SCMUploaderNotifyResponse"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="request" type="org.apache.hadoop.yarn.server.api.protocolrecords.SCMUploaderNotifyRequest"/>
      <exception name="YarnException" type="org.apache.hadoop.yarn.exceptions.YarnException"/>
      <exception name="IOException" type="java.io.IOException"/>
    </method>
    <method name="canUpload" return="org.apache.hadoop.yarn.server.api.protocolrecords.SCMUploaderCanUploadResponse"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="request" type="org.apache.hadoop.yarn.server.api.protocolrecords.SCMUploaderCanUploadRequest"/>
      <exception name="YarnException" type="org.apache.hadoop.yarn.exceptions.YarnException"/>
      <exception name="IOException" type="java.io.IOException"/>
    </method>
  </class>
  <!-- end class org.apache.hadoop.yarn.server.api.impl.pb.client.SCMUploaderProtocolPBClientImpl -->
</package>
<package name="org.apache.hadoop.yarn.server.api.impl.pb.service">
  <!-- start class org.apache.hadoop.yarn.server.api.impl.pb.service.CollectorNodemanagerProtocolPBServiceImpl -->
  <class name="CollectorNodemanagerProtocolPBServiceImpl" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="org.apache.hadoop.yarn.server.api.CollectorNodemanagerProtocolPB"/>
    <constructor name="CollectorNodemanagerProtocolPBServiceImpl" type="org.apache.hadoop.yarn.server.api.CollectorNodemanagerProtocol"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="reportNewCollectorInfo" return="org.apache.hadoop.yarn.proto.YarnServerCommonServiceProtos.ReportNewCollectorInfoResponseProto"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="arg0" type="com.google.protobuf.RpcController"/>
      <param name="proto" type="org.apache.hadoop.yarn.proto.YarnServerCommonServiceProtos.ReportNewCollectorInfoRequestProto"/>
      <exception name="ServiceException" type="com.google.protobuf.ServiceException"/>
    </method>
    <method name="getTimelineCollectorContext" return="org.apache.hadoop.yarn.proto.YarnServerCommonServiceProtos.GetTimelineCollectorContextResponseProto"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="controller" type="com.google.protobuf.RpcController"/>
      <param name="proto" type="org.apache.hadoop.yarn.proto.YarnServerCommonServiceProtos.GetTimelineCollectorContextRequestProto"/>
      <exception name="ServiceException" type="com.google.protobuf.ServiceException"/>
    </method>
  </class>
  <!-- end class org.apache.hadoop.yarn.server.api.impl.pb.service.CollectorNodemanagerProtocolPBServiceImpl -->
  <!-- start class org.apache.hadoop.yarn.server.api.impl.pb.service.DistributedSchedulingAMProtocolPBServiceImpl -->
  <class name="DistributedSchedulingAMProtocolPBServiceImpl" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="org.apache.hadoop.yarn.server.api.DistributedSchedulingAMProtocolPB"/>
    <constructor name="DistributedSchedulingAMProtocolPBServiceImpl" type="org.apache.hadoop.yarn.server.api.DistributedSchedulingAMProtocol"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="registerApplicationMasterForDistributedScheduling" return="org.apache.hadoop.yarn.proto.YarnServerCommonServiceProtos.RegisterDistributedSchedulingAMResponseProto"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="controller" type="com.google.protobuf.RpcController"/>
      <param name="proto" type="org.apache.hadoop.yarn.proto.YarnServiceProtos.RegisterApplicationMasterRequestProto"/>
      <exception name="ServiceException" type="com.google.protobuf.ServiceException"/>
    </method>
    <method name="allocateForDistributedScheduling" return="org.apache.hadoop.yarn.proto.YarnServerCommonServiceProtos.DistributedSchedulingAllocateResponseProto"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="controller" type="com.google.protobuf.RpcController"/>
      <param name="proto" type="org.apache.hadoop.yarn.proto.YarnServerCommonServiceProtos.DistributedSchedulingAllocateRequestProto"/>
      <exception name="ServiceException" type="com.google.protobuf.ServiceException"/>
    </method>
    <method name="allocate" return="org.apache.hadoop.yarn.proto.YarnServiceProtos.AllocateResponseProto"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="arg0" type="com.google.protobuf.RpcController"/>
      <param name="proto" type="org.apache.hadoop.yarn.proto.YarnServiceProtos.AllocateRequestProto"/>
      <exception name="ServiceException" type="com.google.protobuf.ServiceException"/>
    </method>
    <method name="finishApplicationMaster" return="org.apache.hadoop.yarn.proto.YarnServiceProtos.FinishApplicationMasterResponseProto"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="arg0" type="com.google.protobuf.RpcController"/>
      <param name="proto" type="org.apache.hadoop.yarn.proto.YarnServiceProtos.FinishApplicationMasterRequestProto"/>
      <exception name="ServiceException" type="com.google.protobuf.ServiceException"/>
    </method>
    <method name="registerApplicationMaster" return="org.apache.hadoop.yarn.proto.YarnServiceProtos.RegisterApplicationMasterResponseProto"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="arg0" type="com.google.protobuf.RpcController"/>
      <param name="proto" type="org.apache.hadoop.yarn.proto.YarnServiceProtos.RegisterApplicationMasterRequestProto"/>
      <exception name="ServiceException" type="com.google.protobuf.ServiceException"/>
    </method>
    <doc>
    <![CDATA[Implementation of {@link DistributedSchedulingAMProtocolPB}.]]>
    </doc>
  </class>
  <!-- end class org.apache.hadoop.yarn.server.api.impl.pb.service.DistributedSchedulingAMProtocolPBServiceImpl -->
  <!-- start class org.apache.hadoop.yarn.server.api.impl.pb.service.ResourceTrackerPBServiceImpl -->
  <class name="ResourceTrackerPBServiceImpl" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="org.apache.hadoop.yarn.server.api.ResourceTrackerPB"/>
    <constructor name="ResourceTrackerPBServiceImpl" type="org.apache.hadoop.yarn.server.api.ResourceTracker"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="registerNodeManager" return="org.apache.hadoop.yarn.proto.YarnServerCommonServiceProtos.RegisterNodeManagerResponseProto"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="controller" type="com.google.protobuf.RpcController"/>
      <param name="proto" type="org.apache.hadoop.yarn.proto.YarnServerCommonServiceProtos.RegisterNodeManagerRequestProto"/>
      <exception name="ServiceException" type="com.google.protobuf.ServiceException"/>
    </method>
    <method name="nodeHeartbeat" return="org.apache.hadoop.yarn.proto.YarnServerCommonServiceProtos.NodeHeartbeatResponseProto"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="controller" type="com.google.protobuf.RpcController"/>
      <param name="proto" type="org.apache.hadoop.yarn.proto.YarnServerCommonServiceProtos.NodeHeartbeatRequestProto"/>
      <exception name="ServiceException" type="com.google.protobuf.ServiceException"/>
    </method>
    <method name="unRegisterNodeManager" return="org.apache.hadoop.yarn.proto.YarnServerCommonServiceProtos.UnRegisterNodeManagerResponseProto"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="controller" type="com.google.protobuf.RpcController"/>
      <param name="proto" type="org.apache.hadoop.yarn.proto.YarnServerCommonServiceProtos.UnRegisterNodeManagerRequestProto"/>
      <exception name="ServiceException" type="com.google.protobuf.ServiceException"/>
    </method>
  </class>
  <!-- end class org.apache.hadoop.yarn.server.api.impl.pb.service.ResourceTrackerPBServiceImpl -->
  <!-- start class org.apache.hadoop.yarn.server.api.impl.pb.service.SCMUploaderProtocolPBServiceImpl -->
  <class name="SCMUploaderProtocolPBServiceImpl" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="org.apache.hadoop.yarn.server.api.SCMUploaderProtocolPB"/>
    <constructor name="SCMUploaderProtocolPBServiceImpl" type="org.apache.hadoop.yarn.server.api.SCMUploaderProtocol"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="notify" return="org.apache.hadoop.yarn.proto.YarnServerCommonServiceProtos.SCMUploaderNotifyResponseProto"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="controller" type="com.google.protobuf.RpcController"/>
      <param name="proto" type="org.apache.hadoop.yarn.proto.YarnServerCommonServiceProtos.SCMUploaderNotifyRequestProto"/>
      <exception name="ServiceException" type="com.google.protobuf.ServiceException"/>
    </method>
    <method name="canUpload" return="org.apache.hadoop.yarn.proto.YarnServerCommonServiceProtos.SCMUploaderCanUploadResponseProto"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="controller" type="com.google.protobuf.RpcController"/>
      <param name="proto" type="org.apache.hadoop.yarn.proto.YarnServerCommonServiceProtos.SCMUploaderCanUploadRequestProto"/>
      <exception name="ServiceException" type="com.google.protobuf.ServiceException"/>
    </method>
  </class>
  <!-- end class org.apache.hadoop.yarn.server.api.impl.pb.service.SCMUploaderProtocolPBServiceImpl -->
</package>
<package name="org.apache.hadoop.yarn.server.api.records">
  <!-- start class org.apache.hadoop.yarn.server.api.records.ContainerQueuingLimit -->
  <class name="ContainerQueuingLimit" extends="java.lang.Object"
    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="ContainerQueuingLimit"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="newInstance" return="org.apache.hadoop.yarn.server.api.records.ContainerQueuingLimit"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getMaxQueueLength" return="int"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setMaxQueueLength"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="queueLength" type="int"/>
    </method>
    <method name="getMaxQueueWaitTimeInMs" return="int"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setMaxQueueWaitTimeInMs"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="waitTime" type="int"/>
    </method>
    <doc>
    <![CDATA[Used to hold max wait time / queue length information to be
 passed back to the NodeManager.]]>
    </doc>
  </class>
  <!-- end class org.apache.hadoop.yarn.server.api.records.ContainerQueuingLimit -->
  <!-- start interface org.apache.hadoop.yarn.server.api.records.MasterKey -->
  <interface name="MasterKey"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="getKeyId" return="int"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setKeyId"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="keyId" type="int"/>
    </method>
    <method name="getBytes" return="java.nio.ByteBuffer"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setBytes"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="bytes" type="java.nio.ByteBuffer"/>
    </method>
  </interface>
  <!-- end interface org.apache.hadoop.yarn.server.api.records.MasterKey -->
  <!-- start class org.apache.hadoop.yarn.server.api.records.NodeAction -->
  <class name="NodeAction" extends="java.lang.Enum"
    abstract="false"
    static="false" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="values" return="org.apache.hadoop.yarn.server.api.records.NodeAction[]"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="valueOf" return="org.apache.hadoop.yarn.server.api.records.NodeAction"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
    </method>
    <doc>
    <![CDATA[The NodeManager is instructed to perform the given action.]]>
    </doc>
  </class>
  <!-- end class org.apache.hadoop.yarn.server.api.records.NodeAction -->
  <!-- start class org.apache.hadoop.yarn.server.api.records.NodeHealthStatus -->
  <class name="NodeHealthStatus" extends="java.lang.Object"
    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="NodeHealthStatus"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getIsNodeHealthy" return="boolean"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Is the node healthy?
 @return <code>true</code> if the node is healthy, else <code>false</code>]]>
      </doc>
    </method>
    <method name="getHealthReport" return="java.lang.String"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get the <em>diagnostic health report</em> of the node.
 @return <em>diagnostic health report</em> of the node]]>
      </doc>
    </method>
    <method name="getLastHealthReportTime" return="long"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get the <em>last timestamp</em> at which the health report was received.
 @return <em>last timestamp</em> at which the health report was received]]>
      </doc>
    </method>
    <doc>
    <![CDATA[{@code NodeHealthStatus} is a summary of the health status of the node.
 <p>
 It includes information such as:
 <ul>
   <li>
     An indicator of whether the node is healthy, as determined by the
     health-check script.
   </li>
   <li>The previous time at which the health status was reported.</li>
   <li>A diagnostic report on the health status.</li>
 </ul>
 
 @see NodeReport
 @see ApplicationClientProtocol#getClusterNodes(org.apache.hadoop.yarn.api.protocolrecords.GetClusterNodesRequest)]]>
    </doc>
  </class>
  <!-- end class org.apache.hadoop.yarn.server.api.records.NodeHealthStatus -->
  <!-- start class org.apache.hadoop.yarn.server.api.records.NodeStatus -->
  <class name="NodeStatus" extends="java.lang.Object"
    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="NodeStatus"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="newInstance" return="org.apache.hadoop.yarn.server.api.records.NodeStatus"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="nodeId" type="org.apache.hadoop.yarn.api.records.NodeId"/>
      <param name="responseId" type="int"/>
      <param name="containerStatuses" type="java.util.List"/>
      <param name="keepAliveApplications" type="java.util.List"/>
      <param name="nodeHealthStatus" type="org.apache.hadoop.yarn.server.api.records.NodeHealthStatus"/>
      <param name="containersUtilization" type="org.apache.hadoop.yarn.api.records.ResourceUtilization"/>
      <param name="nodeUtilization" type="org.apache.hadoop.yarn.api.records.ResourceUtilization"/>
      <param name="increasedContainers" type="java.util.List"/>
      <doc>
      <![CDATA[Create a new {@code NodeStatus}.
 @param nodeId Identifier for this node.
 @param responseId Identifier for the response.
 @param containerStatuses Status of the containers running in this node.
 @param keepAliveApplications Applications to keep alive.
 @param nodeHealthStatus Health status of the node.
 @param containersUtilization Utilization of the containers in this node.
 @param nodeUtilization Utilization of the node.
 @param increasedContainers Containers whose resource has been increased.
 @return New {@code NodeStatus} with the provided information.]]>
      </doc>
    </method>
    <method name="getNodeId" return="org.apache.hadoop.yarn.api.records.NodeId"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getResponseId" return="int"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getContainersStatuses" return="java.util.List"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setContainersStatuses"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="containersStatuses" type="java.util.List"/>
    </method>
    <method name="getKeepAliveApplications" return="java.util.List"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setKeepAliveApplications"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="appIds" type="java.util.List"/>
    </method>
    <method name="getNodeHealthStatus" return="org.apache.hadoop.yarn.server.api.records.NodeHealthStatus"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setNodeHealthStatus"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="healthStatus" type="org.apache.hadoop.yarn.server.api.records.NodeHealthStatus"/>
    </method>
    <method name="setNodeId"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="nodeId" type="org.apache.hadoop.yarn.api.records.NodeId"/>
    </method>
    <method name="setResponseId"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="responseId" type="int"/>
    </method>
    <method name="getContainersUtilization" return="org.apache.hadoop.yarn.api.records.ResourceUtilization"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get the <em>resource utilization</em> of the containers.
 @return <em>resource utilization</em> of the containers]]>
      </doc>
    </method>
    <method name="getNodeUtilization" return="org.apache.hadoop.yarn.api.records.ResourceUtilization"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get the <em>resource utilization</em> of the node.
 @return <em>resource utilization</em> of the node]]>
      </doc>
    </method>
    <method name="getIncreasedContainers" return="java.util.List"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[{@code NodeStatus} is a summary of the status of the node.
 <p>
 It includes information such as:
 <ul>
   <li>Node information and status..</li>
   <li>Container status.</li>
 </ul>]]>
    </doc>
  </class>
  <!-- end class org.apache.hadoop.yarn.server.api.records.NodeStatus -->
</package>
<package name="org.apache.hadoop.yarn.server.api.records.impl.pb">
  <!-- start class org.apache.hadoop.yarn.server.api.records.impl.pb.ContainerQueuingLimitPBImpl -->
  <class name="ContainerQueuingLimitPBImpl" extends="org.apache.hadoop.yarn.server.api.records.ContainerQueuingLimit"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="ContainerQueuingLimitPBImpl"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <constructor name="ContainerQueuingLimitPBImpl" type="org.apache.hadoop.yarn.proto.YarnServerCommonServiceProtos.ContainerQueuingLimitProto"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getProto" return="org.apache.hadoop.yarn.proto.YarnServerCommonServiceProtos.ContainerQueuingLimitProto"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getMaxQueueWaitTimeInMs" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setMaxQueueWaitTimeInMs"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="waitTime" type="int"/>
    </method>
    <method name="getMaxQueueLength" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setMaxQueueLength"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="queueLength" type="int"/>
    </method>
    <doc>
    <![CDATA[Implementation of ContainerQueuingLimit interface.]]>
    </doc>
  </class>
  <!-- end class org.apache.hadoop.yarn.server.api.records.impl.pb.ContainerQueuingLimitPBImpl -->
  <!-- start class org.apache.hadoop.yarn.server.api.records.impl.pb.MasterKeyPBImpl -->
  <class name="MasterKeyPBImpl" extends="org.apache.hadoop.yarn.api.records.impl.pb.ProtoBase"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="org.apache.hadoop.yarn.server.api.records.MasterKey"/>
    <constructor name="MasterKeyPBImpl"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <constructor name="MasterKeyPBImpl" type="org.apache.hadoop.yarn.proto.YarnServerCommonProtos.MasterKeyProto"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getProto" return="org.apache.hadoop.yarn.proto.YarnServerCommonProtos.MasterKeyProto"
      abstract="false" native="false" synchronized="true"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getKeyId" return="int"
      abstract="false" native="false" synchronized="true"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setKeyId"
      abstract="false" native="false" synchronized="true"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="id" type="int"/>
    </method>
    <method name="getBytes" return="java.nio.ByteBuffer"
      abstract="false" native="false" synchronized="true"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setBytes"
      abstract="false" native="false" synchronized="true"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="bytes" type="java.nio.ByteBuffer"/>
    </method>
    <method name="hashCode" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="equals" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="obj" type="java.lang.Object"/>
    </method>
  </class>
  <!-- end class org.apache.hadoop.yarn.server.api.records.impl.pb.MasterKeyPBImpl -->
  <!-- start class org.apache.hadoop.yarn.server.api.records.impl.pb.NodeHealthStatusPBImpl -->
  <class name="NodeHealthStatusPBImpl" extends="org.apache.hadoop.yarn.server.api.records.NodeHealthStatus"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="NodeHealthStatusPBImpl"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <constructor name="NodeHealthStatusPBImpl" type="org.apache.hadoop.yarn.proto.YarnServerCommonProtos.NodeHealthStatusProto"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getProto" return="org.apache.hadoop.yarn.proto.YarnServerCommonProtos.NodeHealthStatusProto"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="hashCode" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="equals" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="other" type="java.lang.Object"/>
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getIsNodeHealthy" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setIsNodeHealthy"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="isNodeHealthy" type="boolean"/>
    </method>
    <method name="getHealthReport" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setHealthReport"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="healthReport" type="java.lang.String"/>
    </method>
    <method name="getLastHealthReportTime" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setLastHealthReportTime"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="lastHealthReport" type="long"/>
    </method>
  </class>
  <!-- end class org.apache.hadoop.yarn.server.api.records.impl.pb.NodeHealthStatusPBImpl -->
  <!-- start class org.apache.hadoop.yarn.server.api.records.impl.pb.NodeStatusPBImpl -->
  <class name="NodeStatusPBImpl" extends="org.apache.hadoop.yarn.server.api.records.NodeStatus"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="NodeStatusPBImpl"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <constructor name="NodeStatusPBImpl" type="org.apache.hadoop.yarn.proto.YarnServerCommonProtos.NodeStatusProto"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getProto" return="org.apache.hadoop.yarn.proto.YarnServerCommonProtos.NodeStatusProto"
      abstract="false" native="false" synchronized="true"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="hashCode" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="equals" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="other" type="java.lang.Object"/>
    </method>
    <method name="getResponseId" return="int"
      abstract="false" native="false" synchronized="true"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setResponseId"
      abstract="false" native="false" synchronized="true"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="responseId" type="int"/>
    </method>
    <method name="getNodeId" return="org.apache.hadoop.yarn.api.records.NodeId"
      abstract="false" native="false" synchronized="true"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setNodeId"
      abstract="false" native="false" synchronized="true"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="nodeId" type="org.apache.hadoop.yarn.api.records.NodeId"/>
    </method>
    <method name="getContainersStatuses" return="java.util.List"
      abstract="false" native="false" synchronized="true"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setContainersStatuses"
      abstract="false" native="false" synchronized="true"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="containers" type="java.util.List"/>
    </method>
    <method name="getKeepAliveApplications" return="java.util.List"
      abstract="false" native="false" synchronized="true"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setKeepAliveApplications"
      abstract="false" native="false" synchronized="true"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="appIds" type="java.util.List"/>
    </method>
    <method name="getNodeHealthStatus" return="org.apache.hadoop.yarn.server.api.records.NodeHealthStatus"
      abstract="false" native="false" synchronized="true"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setNodeHealthStatus"
      abstract="false" native="false" synchronized="true"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="healthStatus" type="org.apache.hadoop.yarn.server.api.records.NodeHealthStatus"/>
    </method>
    <method name="getContainersUtilization" return="org.apache.hadoop.yarn.api.records.ResourceUtilization"
      abstract="false" native="false" synchronized="true"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setContainersUtilization"
      abstract="false" native="false" synchronized="true"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="containersUtilization" type="org.apache.hadoop.yarn.api.records.ResourceUtilization"/>
    </method>
    <method name="getNodeUtilization" return="org.apache.hadoop.yarn.api.records.ResourceUtilization"
      abstract="false" native="false" synchronized="true"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setNodeUtilization"
      abstract="false" native="false" synchronized="true"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="nodeUtilization" type="org.apache.hadoop.yarn.api.records.ResourceUtilization"/>
    </method>
    <method name="getIncreasedContainers" return="java.util.List"
      abstract="false" native="false" synchronized="true"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setIncreasedContainers"
      abstract="false" native="false" synchronized="true"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="increasedContainers" type="java.util.List"/>
    </method>
    <method name="getQueuedContainersStatus" return="org.apache.hadoop.yarn.server.api.records.QueuedContainersStatus"
      abstract="false" native="false" synchronized="true"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setQueuedContainersStatus"
      abstract="false" native="false" synchronized="true"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="queuedContainersStatus" type="org.apache.hadoop.yarn.server.api.records.QueuedContainersStatus"/>
    </method>
  </class>
  <!-- end class org.apache.hadoop.yarn.server.api.records.impl.pb.NodeStatusPBImpl -->
  <!-- start class org.apache.hadoop.yarn.server.api.records.impl.pb.QueuedContainersStatusPBImpl -->
  <class name="QueuedContainersStatusPBImpl" extends="org.apache.hadoop.yarn.server.api.records.QueuedContainersStatus"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="QueuedContainersStatusPBImpl"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <constructor name="QueuedContainersStatusPBImpl" type="org.apache.hadoop.yarn.proto.YarnServerCommonProtos.QueuedContainersStatusProto"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getProto" return="org.apache.hadoop.yarn.proto.YarnServerCommonProtos.QueuedContainersStatusProto"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getEstimatedQueueWaitTime" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setEstimatedQueueWaitTime"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="queueWaitTime" type="int"/>
    </method>
    <method name="getWaitQueueLength" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setWaitQueueLength"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="waitQueueLength" type="int"/>
    </method>
    <doc>
    <![CDATA[Protocol Buffer implementation of QueuedContainersStatus.]]>
    </doc>
  </class>
  <!-- end class org.apache.hadoop.yarn.server.api.records.impl.pb.QueuedContainersStatusPBImpl -->
</package>
<package name="org.apache.hadoop.yarn.server.metrics">
</package>
<package name="org.apache.hadoop.yarn.server.records">
</package>
<package name="org.apache.hadoop.yarn.server.records.impl.pb">
  <!-- start class org.apache.hadoop.yarn.server.records.impl.pb.VersionPBImpl -->
  <class name="VersionPBImpl" extends="org.apache.hadoop.yarn.server.records.Version"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="VersionPBImpl"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <constructor name="VersionPBImpl" type="org.apache.hadoop.yarn.proto.YarnServerCommonProtos.VersionProto"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getProto" return="org.apache.hadoop.yarn.proto.YarnServerCommonProtos.VersionProto"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getMajorVersion" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setMajorVersion"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="major" type="int"/>
    </method>
    <method name="getMinorVersion" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setMinorVersion"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="minor" type="int"/>
    </method>
  </class>
  <!-- end class org.apache.hadoop.yarn.server.records.impl.pb.VersionPBImpl -->
</package>
<package name="org.apache.hadoop.yarn.server.scheduler">
  <!-- start class org.apache.hadoop.yarn.server.scheduler.OpportunisticContainerAllocator -->
  <class name="OpportunisticContainerAllocator" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="OpportunisticContainerAllocator" type="org.apache.hadoop.yarn.server.security.BaseContainerTokenSecretManager, int"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Create a new Opportunistic Container Allocator.
 @param tokenSecretManager TokenSecretManager
 @param webpagePort Webpage Port]]>
      </doc>
    </constructor>
    <method name="allocateContainers" return="java.util.List"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="request" type="org.apache.hadoop.yarn.api.protocolrecords.AllocateRequest"/>
      <param name="applicationAttemptId" type="org.apache.hadoop.yarn.api.records.ApplicationAttemptId"/>
      <param name="appContext" type="org.apache.hadoop.yarn.server.scheduler.OpportunisticContainerContext"/>
      <param name="rmIdentifier" type="long"/>
      <param name="appSubmitter" type="java.lang.String"/>
      <exception name="YarnException" type="org.apache.hadoop.yarn.exceptions.YarnException"/>
      <doc>
      <![CDATA[Entry point into the Opportunistic Container Allocator.
 @param request AllocateRequest
 @param applicationAttemptId ApplicationAttemptId
 @param appContext App Specific OpportunisticContainerContext
 @param rmIdentifier RM Identifier
 @param appSubmitter App Submitter
 @return List of Containers.
 @throws YarnException YarnException]]>
      </doc>
    </method>
    <doc>
    <![CDATA[<p>
 The OpportunisticContainerAllocator allocates containers on a given list of
 nodes, after modifying the container sizes to respect the limits set by the
 ResourceManager. It tries to distribute the containers as evenly as possible.
 </p>]]>
    </doc>
  </class>
  <!-- end class org.apache.hadoop.yarn.server.scheduler.OpportunisticContainerAllocator -->
  <!-- start class org.apache.hadoop.yarn.server.scheduler.OpportunisticContainerAllocator.AllocationParams -->
  <class name="OpportunisticContainerAllocator.AllocationParams" extends="java.lang.Object"
    abstract="false"
    static="true" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="AllocationParams"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getMaxResource" return="org.apache.hadoop.yarn.api.records.Resource"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Return Max Resource.
 @return Resource]]>
      </doc>
    </method>
    <method name="setMaxResource"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="maxResource" type="org.apache.hadoop.yarn.api.records.Resource"/>
      <doc>
      <![CDATA[Set Max Resource.
 @param maxResource Resource]]>
      </doc>
    </method>
    <method name="getMinResource" return="org.apache.hadoop.yarn.api.records.Resource"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get Min Resource.
 @return Resource]]>
      </doc>
    </method>
    <method name="setMinResource"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="minResource" type="org.apache.hadoop.yarn.api.records.Resource"/>
      <doc>
      <![CDATA[Set Min Resource.
 @param minResource Resource]]>
      </doc>
    </method>
    <method name="getIncrementResource" return="org.apache.hadoop.yarn.api.records.Resource"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get Incremental Resource.
 @return Incremental Resource]]>
      </doc>
    </method>
    <method name="setIncrementResource"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="incrementResource" type="org.apache.hadoop.yarn.api.records.Resource"/>
      <doc>
      <![CDATA[Set Incremental resource.
 @param incrementResource Resource]]>
      </doc>
    </method>
    <method name="getContainerTokenExpiryInterval" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get Container Token Expiry interval.
 @return Container Token Expiry interval]]>
      </doc>
    </method>
    <method name="setContainerTokenExpiryInterval"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="containerTokenExpiryInterval" type="int"/>
      <doc>
      <![CDATA[Set Container Token Expiry time in ms.
 @param containerTokenExpiryInterval Container Token Expiry in ms]]>
      </doc>
    </method>
    <doc>
    <![CDATA[This class encapsulates application specific parameters used to build a
 Container.]]>
    </doc>
  </class>
  <!-- end class org.apache.hadoop.yarn.server.scheduler.OpportunisticContainerAllocator.AllocationParams -->
  <!-- start class org.apache.hadoop.yarn.server.scheduler.OpportunisticContainerAllocator.ContainerIdGenerator -->
  <class name="OpportunisticContainerAllocator.ContainerIdGenerator" extends="java.lang.Object"
    abstract="false"
    static="true" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="ContainerIdGenerator"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="resetContainerIdCounter"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="containerIdStart" type="long"/>
      <doc>
      <![CDATA[This method can reset the generator to a specific value.
 @param containerIdStart containerId]]>
      </doc>
    </method>
    <method name="setContainerIdCounter"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="counter" type="java.util.concurrent.atomic.AtomicLong"/>
      <doc>
      <![CDATA[Sets the underlying Atomic Long. To be used when implementation needs to
 share the underlying AtomicLong of an existing counter.
 @param counter AtomicLong]]>
      </doc>
    </method>
    <method name="generateContainerId" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Generates a new long value. Default implementation increments the
 underlying AtomicLong. Sub classes are encouraged to over-ride this
 behaviour.
 @return Counter.]]>
      </doc>
    </method>
    <field name="containerIdCounter" type="java.util.concurrent.atomic.AtomicLong"
      transient="false" volatile="true"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
    </field>
    <doc>
    <![CDATA[A Container Id Generator.]]>
    </doc>
  </class>
  <!-- end class org.apache.hadoop.yarn.server.scheduler.OpportunisticContainerAllocator.ContainerIdGenerator -->
  <!-- start class org.apache.hadoop.yarn.server.scheduler.OpportunisticContainerContext -->
  <class name="OpportunisticContainerContext" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="OpportunisticContainerContext"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getContainersAllocated" return="java.util.Set"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getAppParams" return="org.apache.hadoop.yarn.server.scheduler.OpportunisticContainerAllocator.AllocationParams"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getContainerIdGenerator" return="org.apache.hadoop.yarn.server.scheduler.OpportunisticContainerAllocator.ContainerIdGenerator"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setContainerIdGenerator"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="containerIdGenerator" type="org.apache.hadoop.yarn.server.scheduler.OpportunisticContainerAllocator.ContainerIdGenerator"/>
    </method>
    <method name="getNodeMap" return="java.util.Map"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getNodeTokens" return="java.util.Map"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getBlacklist" return="java.util.Set"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getOutstandingOpReqs" return="java.util.TreeMap"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="addToOutstandingReqs"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="resourceAsks" type="java.util.List"/>
      <doc>
      <![CDATA[Takes a list of ResourceRequests (asks), extracts the key information viz.
 (Priority, ResourceName, Capability) and adds to the outstanding
 OPPORTUNISTIC outstandingOpReqs map. The nested map is required to enforce
 the current YARN constraint that only a single ResourceRequest can exist at
 a give Priority and Capability.

 @param resourceAsks the list with the {@link ResourceRequest}s]]>
      </doc>
    </method>
    <method name="matchAllocationToOutstandingRequest"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="capability" type="org.apache.hadoop.yarn.api.records.Resource"/>
      <param name="allocatedContainers" type="java.util.List"/>
      <doc>
      <![CDATA[This method matches a returned list of Container Allocations to any
 outstanding OPPORTUNISTIC ResourceRequest.
 @param capability Capability
 @param allocatedContainers Allocated Containers]]>
      </doc>
    </method>
    <doc>
    <![CDATA[This encapsulates application specific information used by the
 Opportunistic Container Allocator to allocate containers.]]>
    </doc>
  </class>
  <!-- end class org.apache.hadoop.yarn.server.scheduler.OpportunisticContainerContext -->
</package>
<package name="org.apache.hadoop.yarn.server.security.http">
  <!-- start class org.apache.hadoop.yarn.server.security.http.RMAuthenticationFilterInitializer -->
  <class name="RMAuthenticationFilterInitializer" extends="org.apache.hadoop.http.FilterInitializer"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="RMAuthenticationFilterInitializer"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="createFilterConfig" return="java.util.Map"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
      <param name="conf" type="org.apache.hadoop.conf.Configuration"/>
    </method>
    <method name="initFilter"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="container" type="org.apache.hadoop.http.FilterContainer"/>
      <param name="conf" type="org.apache.hadoop.conf.Configuration"/>
    </method>
  </class>
  <!-- end class org.apache.hadoop.yarn.server.security.http.RMAuthenticationFilterInitializer -->
</package>
<package name="org.apache.hadoop.yarn.server.sharedcache">
</package>
<package name="org.apache.hadoop.yarn.server.utils">
  <!-- start class org.apache.hadoop.yarn.server.utils.BuilderUtils.ApplicationIdComparator -->
  <class name="BuilderUtils.ApplicationIdComparator" extends="java.lang.Object"
    abstract="false"
    static="true" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="java.util.Comparator"/>
    <implements name="java.io.Serializable"/>
    <constructor name="ApplicationIdComparator"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="compare" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="a1" type="org.apache.hadoop.yarn.api.records.ApplicationId"/>
      <param name="a2" type="org.apache.hadoop.yarn.api.records.ApplicationId"/>
    </method>
  </class>
  <!-- end class org.apache.hadoop.yarn.server.utils.BuilderUtils.ApplicationIdComparator -->
  <!-- start class org.apache.hadoop.yarn.server.utils.BuilderUtils.ContainerIdComparator -->
  <class name="BuilderUtils.ContainerIdComparator" extends="java.lang.Object"
    abstract="false"
    static="true" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="java.util.Comparator"/>
    <implements name="java.io.Serializable"/>
    <constructor name="ContainerIdComparator"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="compare" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="c1" type="org.apache.hadoop.yarn.api.records.ContainerId"/>
      <param name="c2" type="org.apache.hadoop.yarn.api.records.ContainerId"/>
    </method>
  </class>
  <!-- end class org.apache.hadoop.yarn.server.utils.BuilderUtils.ContainerIdComparator -->
  <!-- start class org.apache.hadoop.yarn.server.utils.LeveldbIterator -->
  <class name="LeveldbIterator" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="java.util.Iterator"/>
    <implements name="java.io.Closeable"/>
    <constructor name="LeveldbIterator" type="org.iq80.leveldb.DB"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Create an iterator for the specified database]]>
      </doc>
    </constructor>
    <constructor name="LeveldbIterator" type="org.iq80.leveldb.DB, org.iq80.leveldb.ReadOptions"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Create an iterator for the specified database]]>
      </doc>
    </constructor>
    <constructor name="LeveldbIterator" type="org.iq80.leveldb.DBIterator"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Create an iterator using the specified underlying DBIterator]]>
      </doc>
    </constructor>
    <method name="seek"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="key" type="byte[]"/>
      <exception name="DBException" type="org.iq80.leveldb.DBException"/>
      <doc>
      <![CDATA[Repositions the iterator so the key of the next BlockElement
 returned greater than or equal to the specified targetKey.]]>
      </doc>
    </method>
    <method name="seekToFirst"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="DBException" type="org.iq80.leveldb.DBException"/>
      <doc>
      <![CDATA[Repositions the iterator so is is at the beginning of the Database.]]>
      </doc>
    </method>
    <method name="seekToLast"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="DBException" type="org.iq80.leveldb.DBException"/>
      <doc>
      <![CDATA[Repositions the iterator so it is at the end of of the Database.]]>
      </doc>
    </method>
    <method name="hasNext" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="DBException" type="org.iq80.leveldb.DBException"/>
      <doc>
      <![CDATA[Returns <tt>true</tt> if the iteration has more elements.]]>
      </doc>
    </method>
    <method name="next" return="java.util.Map.Entry"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="DBException" type="org.iq80.leveldb.DBException"/>
      <doc>
      <![CDATA[Returns the next element in the iteration.]]>
      </doc>
    </method>
    <method name="peekNext" return="java.util.Map.Entry"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="DBException" type="org.iq80.leveldb.DBException"/>
      <doc>
      <![CDATA[Returns the next element in the iteration, without advancing the
 iteration.]]>
      </doc>
    </method>
    <method name="hasPrev" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="DBException" type="org.iq80.leveldb.DBException"/>
      <doc>
      <![CDATA[@return true if there is a previous entry in the iteration.]]>
      </doc>
    </method>
    <method name="prev" return="java.util.Map.Entry"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="DBException" type="org.iq80.leveldb.DBException"/>
      <doc>
      <![CDATA[@return the previous element in the iteration and rewinds the iteration.]]>
      </doc>
    </method>
    <method name="peekPrev" return="java.util.Map.Entry"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="DBException" type="org.iq80.leveldb.DBException"/>
      <doc>
      <![CDATA[@return the previous element in the iteration, without rewinding the
 iteration.]]>
      </doc>
    </method>
    <method name="remove"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="DBException" type="org.iq80.leveldb.DBException"/>
      <doc>
      <![CDATA[Removes from the database the last element returned by the iterator.]]>
      </doc>
    </method>
    <method name="close"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="IOException" type="java.io.IOException"/>
      <doc>
      <![CDATA[Closes the iterator.]]>
      </doc>
    </method>
    <doc>
    <![CDATA[A wrapper for a DBIterator to translate the raw RuntimeExceptions that
 can be thrown into DBExceptions.]]>
    </doc>
  </class>
  <!-- end class org.apache.hadoop.yarn.server.utils.LeveldbIterator -->
  <!-- start class org.apache.hadoop.yarn.server.utils.Lock -->
  <class name="Lock"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="java.lang.annotation.Annotation"/>
    <doc>
    <![CDATA[Annotation to document locking order.]]>
    </doc>
  </class>
  <!-- end class org.apache.hadoop.yarn.server.utils.Lock -->
  <!-- start class org.apache.hadoop.yarn.server.utils.Lock.NoLock -->
  <class name="Lock.NoLock" extends="java.lang.Object"
    abstract="false"
    static="true" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="NoLock"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
  </class>
  <!-- end class org.apache.hadoop.yarn.server.utils.Lock.NoLock -->
  <!-- start class org.apache.hadoop.yarn.server.utils.YarnServerBuilderUtils -->
  <class name="YarnServerBuilderUtils" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="YarnServerBuilderUtils"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="newNodeHeartbeatResponse" return="org.apache.hadoop.yarn.server.api.protocolrecords.NodeHeartbeatResponse"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="action" type="org.apache.hadoop.yarn.server.api.records.NodeAction"/>
      <param name="diagnosticsMessage" type="java.lang.String"/>
    </method>
    <method name="newNodeHeartbeatResponse" return="org.apache.hadoop.yarn.server.api.protocolrecords.NodeHeartbeatResponse"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="responseId" type="int"/>
      <param name="action" type="org.apache.hadoop.yarn.server.api.records.NodeAction"/>
      <param name="containersToCleanUp" type="java.util.List"/>
      <param name="applicationsToCleanUp" type="java.util.List"/>
      <param name="containerTokenMasterKey" type="org.apache.hadoop.yarn.server.api.records.MasterKey"/>
      <param name="nmTokenMasterKey" type="org.apache.hadoop.yarn.server.api.records.MasterKey"/>
      <param name="nextHeartbeatInterval" type="long"/>
    </method>
    <doc>
    <![CDATA[Server Builder utilities to construct various objects.]]>
    </doc>
  </class>
  <!-- end class org.apache.hadoop.yarn.server.utils.YarnServerBuilderUtils -->
</package>
<package name="org.apache.hadoop.yarn.server.webapp">
  <!-- start class org.apache.hadoop.yarn.server.webapp.AppAttemptBlock -->
  <class name="AppAttemptBlock" extends="org.apache.hadoop.yarn.webapp.view.HtmlBlock"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="AppAttemptBlock" type="org.apache.hadoop.yarn.api.ApplicationBaseProtocol, org.apache.hadoop.yarn.webapp.View.ViewContext"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="render"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
      <param name="html" type="org.apache.hadoop.yarn.webapp.view.HtmlBlock.Block"/>
    </method>
    <method name="generateOverview"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
      <param name="appAttemptReport" type="org.apache.hadoop.yarn.api.records.ApplicationAttemptReport"/>
      <param name="containers" type="java.util.Collection"/>
      <param name="appAttempt" type="org.apache.hadoop.yarn.server.webapp.dao.AppAttemptInfo"/>
      <param name="node" type="java.lang.String"/>
    </method>
    <method name="hasAMContainer" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
      <param name="containerId" type="org.apache.hadoop.yarn.api.records.ContainerId"/>
      <param name="containers" type="java.util.Collection"/>
    </method>
    <method name="createAttemptHeadRoomTable"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
      <param name="html" type="org.apache.hadoop.yarn.webapp.view.HtmlBlock.Block"/>
    </method>
    <method name="createTablesForAttemptMetrics"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
      <param name="html" type="org.apache.hadoop.yarn.webapp.view.HtmlBlock.Block"/>
    </method>
    <field name="appBaseProt" type="org.apache.hadoop.yarn.api.ApplicationBaseProtocol"
      transient="false" volatile="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
    </field>
    <field name="appAttemptId" type="org.apache.hadoop.yarn.api.records.ApplicationAttemptId"
      transient="false" volatile="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
    </field>
  </class>
  <!-- end class org.apache.hadoop.yarn.server.webapp.AppAttemptBlock -->
  <!-- start class org.apache.hadoop.yarn.server.webapp.AppBlock -->
  <class name="AppBlock" extends="org.apache.hadoop.yarn.webapp.view.HtmlBlock"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="AppBlock" type="org.apache.hadoop.yarn.api.ApplicationBaseProtocol, org.apache.hadoop.yarn.webapp.View.ViewContext, org.apache.hadoop.conf.Configuration"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
    </constructor>
    <method name="render"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
      <param name="html" type="org.apache.hadoop.yarn.webapp.view.HtmlBlock.Block"/>
    </method>
    <method name="generateApplicationTable"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
      <param name="html" type="org.apache.hadoop.yarn.webapp.view.HtmlBlock.Block"/>
      <param name="callerUGI" type="org.apache.hadoop.security.UserGroupInformation"/>
      <param name="attempts" type="java.util.Collection"/>
    </method>
    <method name="createApplicationMetricsTable"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
      <param name="html" type="org.apache.hadoop.yarn.webapp.view.HtmlBlock.Block"/>
    </method>
    <method name="getLogAggregationStatus" return="org.apache.hadoop.yarn.api.records.LogAggregationStatus"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
    </method>
    <method name="getCSRFHeaderString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="conf" type="org.apache.hadoop.conf.Configuration"/>
    </method>
    <field name="appBaseProt" type="org.apache.hadoop.yarn.api.ApplicationBaseProtocol"
      transient="false" volatile="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
    </field>
    <field name="conf" type="org.apache.hadoop.conf.Configuration"
      transient="false" volatile="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
    </field>
    <field name="appID" type="org.apache.hadoop.yarn.api.records.ApplicationId"
      transient="false" volatile="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
    </field>
  </class>
  <!-- end class org.apache.hadoop.yarn.server.webapp.AppBlock -->
  <!-- start class org.apache.hadoop.yarn.server.webapp.AppsBlock -->
  <class name="AppsBlock" extends="org.apache.hadoop.yarn.webapp.view.HtmlBlock"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="AppsBlock" type="org.apache.hadoop.yarn.api.ApplicationBaseProtocol, org.apache.hadoop.yarn.webapp.View.ViewContext"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
    </constructor>
    <method name="fetchData"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
      <exception name="YarnException" type="org.apache.hadoop.yarn.exceptions.YarnException"/>
      <exception name="IOException" type="java.io.IOException"/>
      <exception name="InterruptedException" type="java.lang.InterruptedException"/>
    </method>
    <method name="render"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="html" type="org.apache.hadoop.yarn.webapp.view.HtmlBlock.Block"/>
    </method>
    <method name="renderData"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
      <param name="html" type="org.apache.hadoop.yarn.webapp.view.HtmlBlock.Block"/>
    </method>
    <field name="appBaseProt" type="org.apache.hadoop.yarn.api.ApplicationBaseProtocol"
      transient="false" volatile="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
    </field>
    <field name="reqAppStates" type="java.util.EnumSet"
      transient="false" volatile="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
    </field>
    <field name="callerUGI" type="org.apache.hadoop.security.UserGroupInformation"
      transient="false" volatile="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
    </field>
    <field name="appReports" type="java.util.Collection"
      transient="false" volatile="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
    </field>
  </class>
  <!-- end class org.apache.hadoop.yarn.server.webapp.AppsBlock -->
  <!-- start class org.apache.hadoop.yarn.server.webapp.ContainerBlock -->
  <class name="ContainerBlock" extends="org.apache.hadoop.yarn.webapp.view.HtmlBlock"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="ContainerBlock" type="org.apache.hadoop.yarn.api.ApplicationBaseProtocol, org.apache.hadoop.yarn.webapp.View.ViewContext"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="render"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
      <param name="html" type="org.apache.hadoop.yarn.webapp.view.HtmlBlock.Block"/>
    </method>
    <field name="appBaseProt" type="org.apache.hadoop.yarn.api.ApplicationBaseProtocol"
      transient="false" volatile="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
    </field>
  </class>
  <!-- end class org.apache.hadoop.yarn.server.webapp.ContainerBlock -->
  <!-- start class org.apache.hadoop.yarn.server.webapp.ErrorsAndWarningsBlock -->
  <class name="ErrorsAndWarningsBlock" extends="org.apache.hadoop.yarn.webapp.view.HtmlBlock"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="render"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
      <param name="html" type="org.apache.hadoop.yarn.webapp.view.HtmlBlock.Block"/>
    </method>
  </class>
  <!-- end class org.apache.hadoop.yarn.server.webapp.ErrorsAndWarningsBlock -->
  <!-- start class org.apache.hadoop.yarn.server.webapp.ErrorsAndWarningsBlock.ErrorMetrics -->
  <class name="ErrorsAndWarningsBlock.ErrorMetrics" extends="org.apache.hadoop.yarn.server.webapp.ErrorsAndWarningsBlock.MetricsBase"
    abstract="false"
    static="true" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="render"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
      <param name="html" type="org.apache.hadoop.yarn.webapp.view.HtmlBlock.Block"/>
    </method>
  </class>
  <!-- end class org.apache.hadoop.yarn.server.webapp.ErrorsAndWarningsBlock.ErrorMetrics -->
  <!-- start class org.apache.hadoop.yarn.server.webapp.ErrorsAndWarningsBlock.MetricsBase -->
  <class name="ErrorsAndWarningsBlock.MetricsBase" extends="org.apache.hadoop.yarn.webapp.view.HtmlBlock"
    abstract="false"
    static="true" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="render"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
      <param name="html" type="org.apache.hadoop.yarn.webapp.view.HtmlBlock.Block"/>
    </method>
  </class>
  <!-- end class org.apache.hadoop.yarn.server.webapp.ErrorsAndWarningsBlock.MetricsBase -->
  <!-- start class org.apache.hadoop.yarn.server.webapp.ErrorsAndWarningsBlock.WarningMetrics -->
  <class name="ErrorsAndWarningsBlock.WarningMetrics" extends="org.apache.hadoop.yarn.server.webapp.ErrorsAndWarningsBlock.MetricsBase"
    abstract="false"
    static="true" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="render"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
      <param name="html" type="org.apache.hadoop.yarn.webapp.view.HtmlBlock.Block"/>
    </method>
  </class>
  <!-- end class org.apache.hadoop.yarn.server.webapp.ErrorsAndWarningsBlock.WarningMetrics -->
  <!-- start class org.apache.hadoop.yarn.server.webapp.WebPageUtils -->
  <class name="WebPageUtils" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="WebPageUtils"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="appsTableInit" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="appsTableInit" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="isResourceManager" type="boolean"/>
    </method>
    <method name="appsTableInit" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="isFairSchedulerPage" type="boolean"/>
      <param name="isResourceManager" type="boolean"/>
    </method>
    <method name="attemptsTableInit" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="containersTableInit" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="resourceRequestsTableInit" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
  </class>
  <!-- end class org.apache.hadoop.yarn.server.webapp.WebPageUtils -->
  <!-- start class org.apache.hadoop.yarn.server.webapp.WebServices -->
  <class name="WebServices" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="WebServices" type="org.apache.hadoop.yarn.api.ApplicationBaseProtocol"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getApps" return="org.apache.hadoop.yarn.server.webapp.dao.AppsInfo"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="req" type="javax.servlet.http.HttpServletRequest"/>
      <param name="res" type="javax.servlet.http.HttpServletResponse"/>
      <param name="stateQuery" type="java.lang.String"/>
      <param name="statesQuery" type="java.util.Set"/>
      <param name="finalStatusQuery" type="java.lang.String"/>
      <param name="userQuery" type="java.lang.String"/>
      <param name="queueQuery" type="java.lang.String"/>
      <param name="count" type="java.lang.String"/>
      <param name="startedBegin" type="java.lang.String"/>
      <param name="startedEnd" type="java.lang.String"/>
      <param name="finishBegin" type="java.lang.String"/>
      <param name="finishEnd" type="java.lang.String"/>
      <param name="applicationTypes" type="java.util.Set"/>
    </method>
    <method name="getApp" return="org.apache.hadoop.yarn.server.webapp.dao.AppInfo"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="req" type="javax.servlet.http.HttpServletRequest"/>
      <param name="res" type="javax.servlet.http.HttpServletResponse"/>
      <param name="appId" type="java.lang.String"/>
    </method>
    <method name="getAppAttempts" return="org.apache.hadoop.yarn.server.webapp.dao.AppAttemptsInfo"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="req" type="javax.servlet.http.HttpServletRequest"/>
      <param name="res" type="javax.servlet.http.HttpServletResponse"/>
      <param name="appId" type="java.lang.String"/>
    </method>
    <method name="getAppAttempt" return="org.apache.hadoop.yarn.server.webapp.dao.AppAttemptInfo"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="req" type="javax.servlet.http.HttpServletRequest"/>
      <param name="res" type="javax.servlet.http.HttpServletResponse"/>
      <param name="appId" type="java.lang.String"/>
      <param name="appAttemptId" type="java.lang.String"/>
    </method>
    <method name="getContainers" return="org.apache.hadoop.yarn.server.webapp.dao.ContainersInfo"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="req" type="javax.servlet.http.HttpServletRequest"/>
      <param name="res" type="javax.servlet.http.HttpServletResponse"/>
      <param name="appId" type="java.lang.String"/>
      <param name="appAttemptId" type="java.lang.String"/>
    </method>
    <method name="getContainer" return="org.apache.hadoop.yarn.server.webapp.dao.ContainerInfo"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="req" type="javax.servlet.http.HttpServletRequest"/>
      <param name="res" type="javax.servlet.http.HttpServletResponse"/>
      <param name="appId" type="java.lang.String"/>
      <param name="appAttemptId" type="java.lang.String"/>
      <param name="containerId" type="java.lang.String"/>
    </method>
    <method name="init"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
      <param name="response" type="javax.servlet.http.HttpServletResponse"/>
    </method>
    <method name="parseQueries" return="java.util.Set"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="protected"
      deprecated="not deprecated">
      <param name="queries" type="java.util.Set"/>
      <param name="isState" type="boolean"/>
    </method>
    <method name="parseApplicationId" return="org.apache.hadoop.yarn.api.records.ApplicationId"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="protected"
      deprecated="not deprecated">
      <param name="appId" type="java.lang.String"/>
    </method>
    <method name="parseApplicationAttemptId" return="org.apache.hadoop.yarn.api.records.ApplicationAttemptId"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="protected"
      deprecated="not deprecated">
      <param name="appAttemptId" type="java.lang.String"/>
    </method>
    <method name="parseContainerId" return="org.apache.hadoop.yarn.api.records.ContainerId"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="protected"
      deprecated="not deprecated">
      <param name="containerId" type="java.lang.String"/>
    </method>
    <method name="validateIds"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
      <param name="appId" type="org.apache.hadoop.yarn.api.records.ApplicationId"/>
      <param name="appAttemptId" type="org.apache.hadoop.yarn.api.records.ApplicationAttemptId"/>
      <param name="containerId" type="org.apache.hadoop.yarn.api.records.ContainerId"/>
    </method>
    <method name="getUser" return="org.apache.hadoop.security.UserGroupInformation"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="protected"
      deprecated="not deprecated">
      <param name="req" type="javax.servlet.http.HttpServletRequest"/>
    </method>
    <field name="appBaseProt" type="org.apache.hadoop.yarn.api.ApplicationBaseProtocol"
      transient="false" volatile="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
    </field>
  </class>
  <!-- end class org.apache.hadoop.yarn.server.webapp.WebServices -->
</package>
<package name="org.apache.hadoop.yarn.server.webapp.dao">
  <!-- start class org.apache.hadoop.yarn.server.webapp.dao.AppAttemptInfo -->
  <class name="AppAttemptInfo" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="AppAttemptInfo"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <constructor name="AppAttemptInfo" type="org.apache.hadoop.yarn.api.records.ApplicationAttemptReport"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getAppAttemptId" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getHost" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getRpcPort" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getTrackingUrl" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getOriginalTrackingUrl" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getDiagnosticsInfo" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getAppAttemptState" return="org.apache.hadoop.yarn.api.records.YarnApplicationAttemptState"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getAmContainerId" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getStartedTime" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getFinishedTime" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <field name="appAttemptId" type="java.lang.String"
      transient="false" volatile="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
    </field>
    <field name="host" type="java.lang.String"
      transient="false" volatile="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
    </field>
    <field name="rpcPort" type="int"
      transient="false" volatile="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
    </field>
    <field name="trackingUrl" type="java.lang.String"
      transient="false" volatile="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
    </field>
    <field name="originalTrackingUrl" type="java.lang.String"
      transient="false" volatile="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
    </field>
    <field name="diagnosticsInfo" type="java.lang.String"
      transient="false" volatile="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
    </field>
    <field name="appAttemptState" type="org.apache.hadoop.yarn.api.records.YarnApplicationAttemptState"
      transient="false" volatile="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
    </field>
    <field name="amContainerId" type="java.lang.String"
      transient="false" volatile="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
    </field>
    <field name="startedTime" type="long"
      transient="false" volatile="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
    </field>
    <field name="finishedTime" type="long"
      transient="false" volatile="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
    </field>
  </class>
  <!-- end class org.apache.hadoop.yarn.server.webapp.dao.AppAttemptInfo -->
  <!-- start class org.apache.hadoop.yarn.server.webapp.dao.AppAttemptsInfo -->
  <class name="AppAttemptsInfo" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="AppAttemptsInfo"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="add"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="info" type="org.apache.hadoop.yarn.server.webapp.dao.AppAttemptInfo"/>
    </method>
    <method name="getAttempts" return="java.util.ArrayList"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <field name="attempt" type="java.util.ArrayList"
      transient="false" volatile="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
    </field>
  </class>
  <!-- end class org.apache.hadoop.yarn.server.webapp.dao.AppAttemptsInfo -->
  <!-- start class org.apache.hadoop.yarn.server.webapp.dao.AppInfo -->
  <class name="AppInfo" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="AppInfo"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <constructor name="AppInfo" type="org.apache.hadoop.yarn.api.records.ApplicationReport"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getAppId" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getCurrentAppAttemptId" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getUser" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getQueue" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getType" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getHost" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getRpcPort" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getAppState" return="org.apache.hadoop.yarn.api.records.YarnApplicationState"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getRunningContainers" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getAllocatedCpuVcores" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getAllocatedMemoryMB" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getProgress" return="float"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getDiagnosticsInfo" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getOriginalTrackingUrl" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getTrackingUrl" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getFinalAppStatus" return="org.apache.hadoop.yarn.api.records.FinalApplicationStatus"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getSubmittedTime" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getStartedTime" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getFinishedTime" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getElapsedTime" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getApplicationTags" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="isUnmanagedApp" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getPriority" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getAppNodeLabelExpression" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getAmNodeLabelExpression" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <field name="appId" type="java.lang.String"
      transient="false" volatile="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
    </field>
    <field name="currentAppAttemptId" type="java.lang.String"
      transient="false" volatile="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
    </field>
    <field name="user" type="java.lang.String"
      transient="false" volatile="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
    </field>
    <field name="name" type="java.lang.String"
      transient="false" volatile="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
    </field>
    <field name="queue" type="java.lang.String"
      transient="false" volatile="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
    </field>
    <field name="type" type="java.lang.String"
      transient="false" volatile="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
    </field>
    <field name="host" type="java.lang.String"
      transient="false" volatile="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
    </field>
    <field name="rpcPort" type="int"
      transient="false" volatile="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
    </field>
    <field name="appState" type="org.apache.hadoop.yarn.api.records.YarnApplicationState"
      transient="false" volatile="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
    </field>
    <field name="runningContainers" type="int"
      transient="false" volatile="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
    </field>
    <field name="progress" type="float"
      transient="false" volatile="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
    </field>
    <field name="diagnosticsInfo" type="java.lang.String"
      transient="false" volatile="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
    </field>
    <field name="originalTrackingUrl" type="java.lang.String"
      transient="false" volatile="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
    </field>
    <field name="trackingUrl" type="java.lang.String"
      transient="false" volatile="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
    </field>
    <field name="finalAppStatus" type="org.apache.hadoop.yarn.api.records.FinalApplicationStatus"
      transient="false" volatile="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
    </field>
    <field name="submittedTime" type="long"
      transient="false" volatile="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
    </field>
    <field name="startedTime" type="long"
      transient="false" volatile="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
    </field>
    <field name="finishedTime" type="long"
      transient="false" volatile="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
    </field>
    <field name="elapsedTime" type="long"
      transient="false" volatile="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
    </field>
    <field name="applicationTags" type="java.lang.String"
      transient="false" volatile="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
    </field>
    <field name="priority" type="int"
      transient="false" volatile="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
    </field>
    <field name="unmanagedApplication" type="boolean"
      transient="false" volatile="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
    </field>
  </class>
  <!-- end class org.apache.hadoop.yarn.server.webapp.dao.AppInfo -->
  <!-- start class org.apache.hadoop.yarn.server.webapp.dao.AppsInfo -->
  <class name="AppsInfo" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="AppsInfo"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="add"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="appinfo" type="org.apache.hadoop.yarn.server.webapp.dao.AppInfo"/>
    </method>
    <method name="getApps" return="java.util.ArrayList"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <field name="app" type="java.util.ArrayList"
      transient="false" volatile="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
    </field>
  </class>
  <!-- end class org.apache.hadoop.yarn.server.webapp.dao.AppsInfo -->
  <!-- start class org.apache.hadoop.yarn.server.webapp.dao.ContainerInfo -->
  <class name="ContainerInfo" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="ContainerInfo"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <constructor name="ContainerInfo" type="org.apache.hadoop.yarn.api.records.ContainerReport"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getContainerId" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getAllocatedMB" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getAllocatedVCores" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getAssignedNodeId" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getPriority" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getStartedTime" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getFinishedTime" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getElapsedTime" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getDiagnosticsInfo" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getLogUrl" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getContainerExitStatus" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getContainerState" return="org.apache.hadoop.yarn.api.records.ContainerState"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getNodeHttpAddress" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getNodeId" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <field name="containerId" type="java.lang.String"
      transient="false" volatile="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
    </field>
    <field name="allocatedMB" type="long"
      transient="false" volatile="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
    </field>
    <field name="allocatedVCores" type="long"
      transient="false" volatile="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
    </field>
    <field name="assignedNodeId" type="java.lang.String"
      transient="false" volatile="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
    </field>
    <field name="priority" type="int"
      transient="false" volatile="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
    </field>
    <field name="startedTime" type="long"
      transient="false" volatile="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
    </field>
    <field name="finishedTime" type="long"
      transient="false" volatile="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
    </field>
    <field name="elapsedTime" type="long"
      transient="false" volatile="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
    </field>
    <field name="diagnosticsInfo" type="java.lang.String"
      transient="false" volatile="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
    </field>
    <field name="logUrl" type="java.lang.String"
      transient="false" volatile="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
    </field>
    <field name="containerExitStatus" type="int"
      transient="false" volatile="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
    </field>
    <field name="containerState" type="org.apache.hadoop.yarn.api.records.ContainerState"
      transient="false" volatile="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
    </field>
    <field name="nodeHttpAddress" type="java.lang.String"
      transient="false" volatile="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
    </field>
    <field name="nodeId" type="java.lang.String"
      transient="false" volatile="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
    </field>
  </class>
  <!-- end class org.apache.hadoop.yarn.server.webapp.dao.ContainerInfo -->
  <!-- start class org.apache.hadoop.yarn.server.webapp.dao.ContainersInfo -->
  <class name="ContainersInfo" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="ContainersInfo"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="add"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="containerInfo" type="org.apache.hadoop.yarn.server.webapp.dao.ContainerInfo"/>
    </method>
    <method name="getContainers" return="java.util.ArrayList"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <field name="container" type="java.util.ArrayList"
      transient="false" volatile="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
    </field>
  </class>
  <!-- end class org.apache.hadoop.yarn.server.webapp.dao.ContainersInfo -->
</package>

</api>
